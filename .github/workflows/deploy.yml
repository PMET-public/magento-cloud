name: deploy

on:
  push:
    tags:
      - "*release*-pmet-2.*-ref-*"
      - "*release*-pmet-2.*-demo-*"
      - "*release*-pmet-2.*-b2b-*"

env:
  # set a default terminal for various cmds that expect it
  TERM: xterm
  COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
  SLACK_WEBHOOK_URL_FOR_TMATE_FROM_GITHUB_WORKFLOW: ${{ secrets.SLACK_WEBHOOK_URL_FOR_TMATE_FROM_GITHUB_WORKFLOW }}
  TMATE_AUTHORIZED_KEYS_URL: ${{ secrets.TMATE_AUTHORIZED_KEYS_URL }}
  MAGENTO_CLOUD_CLI_TOKEN: ${{ secrets.MAGENTO_CLOUD_CLI_TOKEN }}

jobs:

  dockerize-then-run-magento-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: delete this tag
        run: |
          # this tag is functionally a workflow trigger, not a git tag
          git push --delete origin "${GITHUB_REF#refs/tags/}"
      - uses: actions/checkout@v2
        with:
          repository: PMET-public/magento-cloud-manager
          submodules: true
          path: magento-cloud-manager
          ref: master
      - name: install magento-cloud cli
        run: |
          # install & configure mcm reqs
          pushd magento-cloud-manager/cli || exit
          npm install
          mv .secrets.tmpl.json .secrets.json
          popd

          # set & check some vars
          tag_to_deploy="$(echo "$GITHUB_REF" | perl -pe 's/.*(pmet.*-(ref|demo|b2b)-.*)/$1/')"
          flavor_of_tag="$(echo "$GITHUB_REF" | perl -pe 's/.*pmet.*-(ref|demo|b2b)-.*/$1/')"
          [[ "$flavor_of_tag" =~ ^(ref|demo|b2b)$ ]] || exit 1
          
          # install mc cli
          curl -sS https://accounts.magento.cloud/cli/installer | php

          # for connecting to cloud envs without interaction
          mkdir ~/.ssh && chmod 700 ~/.ssh
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

          projects_to_deploy=($(
            ~/.magento-cloud/bin/magento-cloud projects --format csv 2> /dev/null | perl -ne "/^(\w+),($flavor_of_tag\-[^ ]+)/ and print \"\$1 \""
          ))

          echo "tag_to_deploy=$tag_to_deploy" >> tmp.txt
          echo "flavor_of_tag=$flavor_of_tag" >> tmp.txt
          echo "projects_to_deploy=${projects_to_deploy[@]}" >> tmp.txt

          # verify all vars; then download specified release and deploy to projects matching flavor
          [[ "$tag_to_deploy" && "$flavor_of_tag" && "${projects_to_deploy[@]}" ]] || exit 1
          curl --fail -OL "https://github.com/PMET-public/magento-cloud/releases/download/$tag_to_deploy/release.tar" && {
            exit 1
            ./magento-cloud-manager/cli/bin/mcm env:deploy --yes release.tar "${projects_to_deploy[@]}"
          }
      - name: keep alive to debug
        if: ${{ failure() }}
        uses: PMET-public/action-tmate@master
